{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","className","alt","src","CardList","cardComponent","robots","map","robot","i","id","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","timer","setTimeout","searchFields","target","value","clearTimeout","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCKCQ,EAZF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACjB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,EAA1B,aACrB,sBAAKE,UAAU,KAAf,UACI,6BAAKF,IACL,4BAAIC,WCILI,EATE,SAAC,GAAc,IACtBC,EADqB,EAAZC,OACcC,KAAI,SAACC,EAAOC,GAAR,OAAc,cAAC,EAAD,CAAcC,GAAIF,EAAME,GAAIX,KAAMS,EAAMT,KAAMC,MAAOQ,EAAMR,OAAhDS,MAC1D,OACI,mCACKJ,KCQEM,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKX,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCOHI,EAdA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,YCPQC,E,kDACjB,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,0DAEJG,KAAKX,MAAMK,a,GAhBgBQ,aCqD3BC,E,kDA/Cb,aAAe,IAAD,8BACZ,gBAeFC,eAAiB,SAACC,GAChB,IAAMC,EAAQC,YAAW,WACvB,EAAKN,SAAS,CAAEO,aAAcH,EAAMI,OAAOC,QAC3CC,aAAaL,KACZ,MAlBH,EAAKV,MAAQ,CACXlB,OAAQ,GACR8B,aAAc,IAJJ,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHhD,MAAK,SAACiD,GAAD,OAAcA,EAASC,UAC5BlD,MAAK,SAACmD,GACL,EAAKd,SAAS,CAAEvB,OAAQqC,S,oBAW9B,WACE,MAA+Bf,KAAKJ,MAA7BlB,EAAP,EAAOA,OAAQ8B,EAAf,EAAeA,aACTQ,EAAiBtC,EAAOuC,QAAO,SAACrC,GAAD,OACnCA,EAAMT,KAAK+C,cAAcC,SAASX,EAAaU,kBAGjD,OAAIxC,EAAO0C,OAIH,sBAAK/C,UAAU,KAAf,UACE,6CACA,cAAC,EAAD,CAAWW,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQsC,WARpB,gD,GA/BEd,aCAlBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhE,M","file":"static/js/main.68961592.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const Card = ({name, email}) => {\n    return ( \n        <div className=\"bg-light-green dib br3 pd3 ma2 grow bw2 shadow-5\">\n            <img alt=\"robots\" src={`https://robohash.org/${name}?200x20`}/>\n            <div className=\"tc\">\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n     );\n}\n \nexport default Card;","import Card from './Card';\nconst CardList = ({robots}) => {\n    const cardComponent = robots.map((robot, i) => <Card key={i} id={robot.id} name={robot.name} email={robot.email}/>);\n    return ( \n        <>  \n            {cardComponent}    \n        </>\n     );\n}\n \nexport default CardList;","const SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","const Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"1px solid black\",\n        height: \"500px\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from 'react'\n\nexport default class ErrorBoundry extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info){\n        this.setState({hasError: true});\n    }\n\n    render() {\n        if(this.state.hasError){\n            return <h1>Ooopss. That is not good</h1>\n        }\n        return this.props.children;\n    }\n}\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n// import { robots } from \"./robots\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchFields: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        this.setState({ robots: users });\n      });\n  }\n\n  onSearchChange = (event) => {\n    const timer = setTimeout(() => {\n      this.setState({ searchFields: event.target.value });\n      clearTimeout(timer);\n    }, 200);\n  };\n\n  render() {\n    const {robots, searchFields} = this.state;\n    const filteredRobots = robots.filter((robot) =>\n      robot.name.toLowerCase().includes(searchFields.toLowerCase())\n    );\n\n    if(!robots.length){\n        return  <h1>Loading...</h1>\n    } else {\n        return (\n            <div className=\"tc\">\n              <h1>RoboFriends</h1>\n              <SearchBox searchChange={this.onSearchChange} />\n              <Scroll>\n                  <ErrorBoundry>\n                  <CardList robots={filteredRobots} />\n                  </ErrorBoundry>\n              </Scroll>\n            </div>\n          );\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}